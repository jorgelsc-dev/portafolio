name: Telegram Notification Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run commands and save output to a file
      run: |
        # Ejecuta tus comandos aqu√≠
        echo "Iniciando el proceso..."
        OUTPUT=$(ls -la 2>&1)  # Ejemplo de comando
        STATUS=$?

        # Guarda el output en un archivo de texto
        echo "$OUTPUT" > output.txt

    - name: Prepare Telegram message
      id: prepare_message
      run: |
        # Obt√©n informaci√≥n adicional del evento
        if [ "$GITHUB_EVENT_NAME" == "push" ]; then
          ACTOR=$GITHUB_ACTOR
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          BRANCH=${GITHUB_REF#refs/heads/}
          EVENT_TYPE="Push"
        elif [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          ACTOR=$GITHUB_ACTOR
          COMMIT_MESSAGE=$(jq -r '.pull_request.title' $GITHUB_EVENT_PATH)
          BRANCH=$(jq -r '.pull_request.head.ref' $GITHUB_EVENT_PATH)
          EVENT_TYPE="Pull Request"
        fi

        # Construye el mensaje con separaci√≥n simple entre l√≠neas
        MESSAGE="üìù $EVENT_TYPE en $GITHUB_REPOSITORY"
        MESSAGE="$MESSAGE  "  # A√±adimos un espacio vac√≠o para separar la siguiente l√≠nea
        MESSAGE="$MESSAGEüë§ Actor: $ACTOR"
        MESSAGE="$MESSAGE  "
        MESSAGE="$MESSAGEüåø Rama: $BRANCH"
        MESSAGE="$MESSAGE  "
        MESSAGE="$MESSAGEüìÑ Mensaje del commit/PR: $COMMIT_MESSAGE"
        MESSAGE="$MESSAGE  "
        MESSAGE="$MESSAGEüì§ Output del comando: Ver archivo adjunto."

        # Guarda el mensaje en una variable de salida
        echo "MESSAGE=$MESSAGE" >> $GITHUB_OUTPUT

    - name: Send message and file to Telegram
      run: |
        # Env√≠a el archivo adjunto a Telegram
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
          -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -F document=@"output.txt" \
          -F caption="${{ steps.prepare_message.outputs.MESSAGE }}"
